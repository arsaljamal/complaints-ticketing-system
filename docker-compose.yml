version: '2'
services:

  #Zookeeper
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    restart: "no"
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  #Kafka
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka-broker
    restart: "no"
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:29092,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_HOST_NAME= kafka
    depends_on:
      - zookeeper


  delivery-service:
    container_name: delivery-service
    build:
      context: ./delivery-service
      dockerfile: DockerFile
    depends_on:
      - kafka
    links:
      - kafka
    environment:
      profile: prod
      broker: kafka
      port: 29092
      topic: tickets
      level: INFO

  ticketing-service:
    container_name: ticketing-service
    build:
      context: ./ticketing-service
      dockerfile: DockerFile
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    links:
      - kafka
    environment:
      profile: prod
      broker: kafka
      port: 29092
      topic: tickets
      roles: roles
      secret: secret
      expiration: 100000
      level: INFO